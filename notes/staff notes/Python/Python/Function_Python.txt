Function:
	Sub Program     
	A function is a block of code which only runs when it is called.
	You can pass data, known as parameters, into a function.
	A function can return data as a result.

Syntax:
	def functionname():
	   statement
	functionname()

#Program for Function
def sample():
    print("Welcome")
def display():
    print("Goood")
sample()
display()


#Program for Arguments
def add(a,b):
    print("Add Value",a+b)

x=int(input("Enter X Value:"))
y=int(input("Enter Y Value:"))

add(x,y)


#Program for Return 
def square(x):
    return x*x

x=int(input("Enter X Value:"))
print("Square value:",square(x))


Recursive Function:
-------------------------
def fact(num):
    if num==1:
        return 1
    else:
        res=num*fact(num-1)     
        return res

num=int(input("Enter Num Value"))
print(fact(num))


Call By Value:
-----------------
def callby(a):
    a=a+5
    print(a)
a=10
print(a)
callby(a)
print(a)

Call By References:
-------------------------
Mutable datatypes such as lists, dicitionaries are passed by references.

def callby(a):
    a.append(5)
    print(format(str(a)))
a=[1,2,3,4]
print(format(str(a)))
callby(a)
print(format(str(a)))

Python Lambda:
----------------------
A lambda function is a small anonymous function.   
A lambda function can take any number of arguments, but can only have one expression.

Syntax:
---------
lambda arguments : expression

x = lambda a : a + 10
print(x(5))
x = lambda a, b : a * b
print(x(5, 6))
x = lambda a, b, c : a + b + c
print(x(5, 6, 2))


Lambda Function:
-----------------------
def myfunc(n):
  return lambda a : a * n

mydoubler = myfunc(2)
print(mydoubler(11))

